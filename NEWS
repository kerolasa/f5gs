2014-07-12
	Release v0.5.  The systemd support is now enabled by default when
	build has needed libraries.  Earlier --quiet option implied
	--no-scripts option, which was a bug and now fixed.  The syslog
	and journald messages are made to have similar content, so that
	one can compare functionality in between system easier.  When
	post-scripts fail such is no longer considered fatal.  Fix to
	crash caused by missing state directory.  Thread safety
	improvements.  Add ChangeLog to distributions, with content of
	git shortlog.

	Notable interface changes include deprecation of receiving
	signals to change status.  Now daemon will exit if it receives
	same signals earlier changed the state.  The state changes can be
	done by sending IPC message, that is easiest with the command
	itself.  Rationality of this interface change is that after using
	this software for real it has become clear other software will
	never send signals to this daemon.  Automatic state changes are
	likely to use the command line interface, which means rather
	messy signal catching can be replaced with a lot less problematic
	IPC messaging.

	Another interfece change is addition of --reason "message here"
	and --why options, that persist over daemon restarts and server
	boot.  The --why printout will include time stamp of when the
	state change happen, and how long it has been since that time.
	While the message is likely to be omitted by most of the users
	the automatic time stamp is something I think has value.  Again
	the actual use of the software has made it clear that sometimes
	one wants to know what happen and when.  So who ever adds state
	changes to scripts should always add --reason.  Otherwise
	debugging is more annoying.

2014-02-07
	Release v0.4.  When ever a developer tells program is ready to
	be used is is reasonable to doubt statement being somehow
	wrong by mistake, or due overconfidence.  The latest version
	changes persistent state file path, and format.

	Format got go be changed because use of state numbers changed,
	and it became obvious the state file has to be versioned in
	order to recover from similar mess in future.  This time the
	version checking is not done quite by the book, because version
	file did not persist over reboot.  Earlier use of /var/run was
	a mistake, now the state is wrote to /var/spool instead.

	If you upgrade be sure to set preferred state after an upgrade
	action.  Lets hope there are no more breaking changes in
	future, that require user interaction.

2014-01-18
	Release v0.3.  This release adds support to systemd and makes
	messaging to use journald when they are available.  Various
	threading and signaling issues are fixed.  The contrib directory
	has an example to puppet management of the f5gs, and a script
	demonstrating how to perform pre-state change actions.  Some of
	the changes make the command performance to be better, while
	other ensure the daemon is very difficult to knock out with
	(d)dos.  The making of abuse hard meant fixing all resource
	leaks.

	IMHO the software has production quality.

2013-10-22
	Release v0.2 that makes the utility to behave like a reasonable
	daemon.  It also includes manual page, autotools setup with
	gnulib to make the thing portable.

	There is also support for pre and post state change scripts,
	that one can use to do additional tasks at a time of an event.
	The reason why a script support was added is local installation
	I am working with.  When a java service is put to maintenance
	or disable state, e.g., F5 is told not to send trafic,
	broadcast messaging from that java service has to be halted as
	well.  The easiest way to do that is to add a iptables deny
	rule for broadcasts, but I cannot possibly add such to the
	f5gs, so the support for 'random' actions has to be external.

	My intention is to control contents of pre annd post scripts
	with puppet.  The nice thing about this decision is that the
	puppet is environment aware, so I can fairly precisely tell
	what sort of additional actions are needed on a server I plan
	to control.

2013-10-09
	The beginning.
